{
  "version": 3,
  "sources": ["../../../contentlayer.config.js", "../../../scripts/siteMetadata.js", "../../../scripts/paths.js", "../../../package.json"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer2/source-files'\r\nimport readingTime from 'reading-time'\r\nimport {\r\n  remarkExtractFrontmatter,\r\n  remarkCodeTitles,\r\n  remarkImgToJsx,\r\n  extractTocHeadings,\r\n} from 'pliny/mdx-plugins/index.js'\r\nimport remarkGfm from 'remark-gfm'\r\nimport remarkMath from 'remark-math'\r\nimport rehypeSlug from 'rehype-slug'\r\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings'\r\nimport rehypeKatex from 'rehype-katex'\r\nimport rehypeCitation from 'rehype-citation'\r\nimport rehypePrismPlus from 'rehype-prism-plus'\r\nimport rehypePresetMinify from 'rehype-preset-minify'\r\nimport mermaid from 'remark-mermaidjs'\r\nimport emoji from 'remark-emoji'\r\nimport { siteMetadata } from './scripts/siteMetadata'\r\nimport { paths } from './scripts/paths'\r\n\r\nconst contentDirPath = paths.content\r\nconst computedFields = {\r\n  slug: {\r\n    type: 'string',\r\n    resolve: (doc) => doc._raw.flattenedPath.replace(/^.+?(\\/)/, ''),\r\n  },\r\n  path: {\r\n    type: 'string',\r\n    resolve: (doc) => doc._raw.flattenedPath,\r\n  },\r\n  filePath: {\r\n    type: 'string',\r\n    resolve: (doc) => doc._raw.sourceFilePath,\r\n  },\r\n  toc: { type: 'string', resolve: (doc) => extractTocHeadings(doc.body.raw) },\r\n}\r\n\r\nconst Post = defineDocumentType(() => ({\r\n  name: 'Post',\r\n  filePathPattern: `**/*.md`,\r\n  fields: {\r\n    title: { type: 'string' },\r\n    date: { type: 'date' },\r\n    tags: { type: 'list', of: { type: 'string' }, default: [] },\r\n    lastmod: { type: 'date' },\r\n    draft: { type: 'boolean' },\r\n    summary: { type: 'string' },\r\n    images: { type: 'json' },\r\n    authors: { type: 'list', of: { type: 'string' } },\r\n    layout: { type: 'string' },\r\n    bibliography: { type: 'string' },\r\n    canonicalUrl: { type: 'string' },\r\n  },\r\n  computedFields: {\r\n    ...computedFields,\r\n    structuredData: {\r\n      type: 'json',\r\n      resolve: (doc) => ({\r\n        '@context': 'https://schema.org',\r\n        '@type': 'BlogPosting',\r\n        headline: doc.title,\r\n        datePublished: doc.date,\r\n        dateModified: doc.lastmod || doc.date,\r\n        description: doc.summary,\r\n        image: doc.images ? doc.images[0] : siteMetadata.socialBanner,\r\n        url: `${siteMetadata.siteUrl}/${doc._raw.flattenedPath}`,\r\n      }),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Article = defineDocumentType(() => ({\r\n  name: 'Article',\r\n  filePathPattern: '**/*.[mdx,md]',\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: { type: 'string' },\r\n    date: { type: 'date' },\r\n    tags: { type: 'list', of: { type: 'string' }, default: [] },\r\n    lastmod: { type: 'date' },\r\n    draft: { type: 'boolean' },\r\n    summary: { type: 'string' },\r\n    images: { type: 'json' },\r\n    authors: { type: 'list', of: { type: 'string' } },\r\n    layout: { type: 'string' },\r\n    bibliography: { type: 'string' },\r\n    canonicalUrl: { type: 'string' },\r\n  },\r\n  computedFields: {\r\n    ...computedFields,\r\n    structuredData: {\r\n      type: 'json',\r\n      resolve: (doc) => ({\r\n        '@context': 'https://schema.org',\r\n        '@type': 'BlogPosting',\r\n        headline: doc.title,\r\n        datePublished: doc.date,\r\n        dateModified: doc.lastmod || doc.date,\r\n        description: doc.summary,\r\n        image: doc.images ? doc.images[0] : siteMetadata.socialBanner,\r\n        url: `${siteMetadata.siteUrl}/${doc._raw.flattenedPath}`,\r\n      }),\r\n    },\r\n  },\r\n}))\r\n\r\nconst Authors = defineDocumentType(() => ({\r\n  name: 'Authors',\r\n  filePathPattern: 'authors/**/*.mdx',\r\n  contentType: 'mdx',\r\n  fields: {\r\n    name: { type: 'string', required: true },\r\n    avatar: { type: 'string' },\r\n    occupation: { type: 'string' },\r\n    company: { type: 'string' },\r\n    email: { type: 'string' },\r\n    twitter: { type: 'string' },\r\n    linkedin: { type: 'string' },\r\n    github: { type: 'string' },\r\n    layout: { type: 'string' },\r\n  },\r\n  computedFields,\r\n}))\r\n\r\nexport default makeSource({\r\n  contentDirPath: contentDirPath,\r\n  documentTypes: [Post, Article, Authors],\r\n  mdx: {\r\n    cwd: process.cwd(),\r\n    remarkPlugins: [\r\n      remarkExtractFrontmatter,\r\n      remarkGfm,\r\n      remarkCodeTitles,\r\n      remarkMath,\r\n      remarkImgToJsx,\r\n      emoji,\r\n      mermaid,\r\n    ],\r\n    rehypePlugins: [\r\n      rehypeSlug,\r\n      rehypeAutolinkHeadings,\r\n      rehypeKatex,\r\n      [rehypeCitation, { path: contentDirPath }],\r\n      [rehypePrismPlus, { defaultLanguage: 'js', ignoreMissing: true }],\r\n      rehypePresetMinify,\r\n    ],\r\n  },\r\n  onSuccess: async (result) => {\r\n    console.log('Content layer build successful!')\r\n  },\r\n});", "export const siteMetadata = {\n  title: '\u7801\u519C\u6458\u8BB0',\n  author: 'jacob jiang',\n  headerTitle: '\u7801\u519C\u6458\u8BB0',\n  description: '\u793E\u755C\u7801\u519C\u65E5\u5E38\u7684\u7B14\u8BB0',\n  language: 'en-us',\n  theme: 'system', // system, dark or light\n  siteUrl: 'https://tailwind-nextjs-starter-blog.vercel.app',\n  siteRepo: 'https://github.com/timlrx/tailwind-nextjs-starter-blog',\n  siteLogo: '/static/images/logo.png',\n  socialBanner: '/static/images/twitter-card.png',\n  mastodon: 'https://mastodon.social/@mastodonuser',\n  email: 'address@yoursite.com',\n  github: 'https://github.com',\n  twitter: 'https://twitter.com/Twitter',\n  facebook: 'https://facebook.com',\n  youtube: 'https://youtube.com',\n  linkedin: 'https://www.linkedin.com',\n  locale: 'en-US',\n  analytics: {\n    // If you want to use an analytics provider you have to add it to the\n    // content security policy in the `next.config.js` file.\n    // supports Plausible, Simple Analytics, Umami, Posthog or Google Analytics.\n    umamiAnalytics: {\n      // We use an env variable for this site to avoid other users cloning our analytics ID\n      umamiWebsiteId: process.env.NEXT_UMAMI_ID, // e.g. 123e4567-e89b-12d3-a456-426614174000\n    },\n    // plausibleAnalytics: {\n    //   plausibleDataDomain: '', // e.g. tailwind-nextjs-starter-blog.vercel.app\n    // },\n    // simpleAnalytics: {},\n    // posthogAnalytics: {\n    //   posthogProjectApiKey: '', // e.g. 123e4567-e89b-12d3-a456-426614174000\n    // },\n    // googleAnalytics: {\n    //   googleAnalyticsId: '', // e.g. G-XXXXXXX\n    // },\n  },\n  newsletter: {\n    // supports mailchimp, buttondown, convertkit, klaviyo, revue, emailoctopus\n    // Please add your .env file and modify it according to your selection\n    provider: 'buttondown',\n  },\n  comments: {\n    // If you want to use an analytics provider you have to add it to the\n    // content security policy in the `next.config.js` file.\n    // Select a provider and use the environment variables associated to it\n    // https://vercel.com/docs/environment-variables\n    provider: 'giscus', // supported providers: giscus, utterances, disqus\n    giscusConfig: {\n      // Visit the link below, and follow the steps in the 'configuration' section\n      // https://giscus.app/\n      repo: process.env.NEXT_PUBLIC_GISCUS_REPO,\n      repositoryId: process.env.NEXT_PUBLIC_GISCUS_REPOSITORY_ID,\n      category: process.env.NEXT_PUBLIC_GISCUS_CATEGORY,\n      categoryId: process.env.NEXT_PUBLIC_GISCUS_CATEGORY_ID,\n      mapping: 'pathname', // supported options: pathname, url, title\n      reactions: '1', // Emoji reactions: 1 = enable / 0 = disable\n      // Send discussion metadata periodically to the parent window: 1 = enable / 0 = disable\n      metadata: '0',\n      // theme example: light, dark, dark_dimmed, dark_high_contrast\n      // transparent_dark, preferred_color_scheme, custom\n      theme: 'light_high_contrast',\n      // theme when dark mode\n      darkTheme: 'transparent_dark',\n      // If the theme option above is set to 'custom`\n      // please provide a link below to your custom theme css file.\n      // example: https://giscus.app/themes/custom_example.css\n      themeURL: '',\n      // This corresponds to the `data-lang=\"en\"` in giscus's configurations\n      lang: 'en',\n      loading: 'lazy',\n    },\n  },\n  search: {\n    provider: 'kbar', // kbar or algolia\n    kbarConfig: {\n      searchDocumentsPath: 'search.json', // path to load documents to search\n    },\n    // provider: 'algolia',\n    // algoliaConfig: {\n    //   // The application ID provided by Algolia\n    //   appId: 'R2IYF7ETH7',\n    //   // Public API key: it is safe to commit it\n    //   apiKey: '599cec31baffa4868cae4e79f180729b',\n    //   indexName: 'docsearch',\n    // },\n  },\n}\n\n\n", "import { join } from 'path'\r\nimport os from 'os'\r\nimport data from '../package.json'\r\n// \u83B7\u53D6\u7528\u6237\u6570\u636E\u76EE\u5F55\r\nfunction getUserDataPath() {\r\n  const homedir = os.homedir()\r\n  \r\n  switch (process.platform) {\r\n    case 'win32':\r\n      return join(homedir, 'AppData', 'Roaming', data.name)\r\n    case 'darwin':\r\n      return join(homedir, 'Library', 'Application Support', data.name)\r\n    case 'linux':\r\n      return join(homedir, '.config', data.name)\r\n    default:\r\n      return join(homedir, '.' + data.name)\r\n  }\r\n}\r\n\r\nexport const paths = {\r\n  userData: getUserDataPath(),\r\n  content: join(getUserDataPath(), 'content')\r\n} ", "{\n  \"name\": \"article-management-tool\",\n  \"private\": true,\n  \"version\": \"0.0.0\",\n  \"description\": \"\u4E00\u4E2A\u5C06\u672C\u5730markdown\u6587\u4EF6\u53D1\u5E03\u5230\u5404\u4E2A\u5E73\u53F0\u7684\u5DE5\u5177\",\n  \"author\": \"jacob jiang\",\n  \"main\": \"out/electron/main/index.js\",\n  \"scripts\": {\n    \"clean\": \"rimraf out/ dist/\",\n    \"dev\": \"npm run build && electron-vite dev --watch\",\n    \"build\": \"npm run build:main && npm run build:preload && npm run build:renderer\",\n    \"build:main\": \"tsc -p electron/tsconfig.json && tsc-alias -p electron/tsconfig.json\",\n    \"build:preload\": \"tsc -p electron/tsconfig.json && tsc-alias -p electron/tsconfig.json\",\n    \"build:renderer\": \"vite build\",\n    \"build:win\": \"pnpm run build && pnpm electron-vite build && pnpm exec electron-builder --win\",\n    \"build:mac\": \"pnpm run build && pnpm electron-vite build && pnpm exec electron-builder --mac\",\n    \"build:linux\": \"pnpm run build && pnpm electron-vite build && pnpm exec electron-builder --linux\",\n    \"lint\": \"eslint .\",\n    \"preview\": \"electron-vite preview\",\n    \"start\": \"electron-vite preview\",\n    \"build:contentlayer\": \"contentlayer2 build\",\n    \"install:playwright\": \"npx playwright install --with-deps chromium\"\n  },\n  \"dependencies\": {\n    \"@mdx-js/esbuild\": \"^3.1.0\",\n    \"astring\": \"^1.9.0\",\n    \"clsx\": \"^2.1.0\",\n    \"contentlayer2\": \"latest\",\n    \"dequal\": \"^2.0.3\",\n    \"devlop\": \"^1.1.0\",\n    \"estree-util-build-jsx\": \"^3.0.1\",\n    \"estree-util-is-identifier-name\": \"^3.0.0\",\n    \"estree-util-to-js\": \"^2.0.0\",\n    \"estree-walker\": \"^3.0.3\",\n    \"hast-util-to-estree\": \"^3.1.2\",\n    \"lucide-react\": \"^0.344.0\",\n    \"next-contentlayer\": \"^0.3.4\",\n    \"playwright\": \"^1.50.1\",\n    \"pliny\": \"0.1.4\",\n    \"react\": \"^18.3.1\",\n    \"react-dom\": \"^18.3.1\",\n    \"react-dropzone\": \"^14.2.3\",\n    \"reading-time\": \"^1.5.0\",\n    \"rehype-autolink-headings\": \"^7.1.0\",\n    \"rehype-citation\": \"^2.0.0\",\n    \"rehype-katex\": \"^7.0.0\",\n    \"rehype-preset-minify\": \"^7.0.0\",\n    \"rehype-prism-plus\": \"^2.0.0\",\n    \"rehype-slug\": \"^6.0.0\",\n    \"remark-emoji\": \"^4.0.1\",\n    \"remark-gfm\": \"^4.0.0\",\n    \"remark-math\": \"^6.0.0\",\n    \"remark-mermaidjs\": \"^6.0.0\",\n    \"source-map\": \"^0.7.4\"\n  },\n  \"devDependencies\": {\n    \"@electron-forge/maker-dmg\": \"^7.2.0\",\n    \"@electron-forge/plugin-fuses\": \"^7.2.0\",\n    \"@electron-forge/plugin-vite\": \"^7.2.0\",\n    \"@electron-toolkit/tsconfig\": \"^1.0.1\",\n    \"@eslint/js\": \"^9.9.1\",\n    \"@mdx-js/mdx\": \"^3.1.0\",\n    \"@mdx-js/react\": \"^3.1.0\",\n    \"@types/estree\": \"^1.0.6\",\n    \"@types/estree-jsx\": \"^1.0.0\",\n    \"@types/mdx\": \"^2.0.5\",\n    \"@types/node\": \"^22.10.1\",\n    \"@types/react\": \"^18.3.5\",\n    \"@types/react-dom\": \"^18.3.0\",\n    \"@vitejs/plugin-react\": \"^4.3.1\",\n    \"autoprefixer\": \"^10.4.18\",\n    \"electron\": \"^28.0.0\",\n    \"electron-builder\": \"^24.13.3\",\n    \"electron-vite\": \"^2.0.0\",\n    \"eslint\": \"^9.9.1\",\n    \"eslint-plugin-react-hooks\": \"^5.1.0-rc.0\",\n    \"eslint-plugin-react-refresh\": \"^0.4.11\",\n    \"globals\": \"^15.9.0\",\n    \"postcss\": \"^8.4.35\",\n    \"rimraf\": \"^5.0.10\",\n    \"tailwindcss\": \"^3.4.1\",\n    \"tsc-alias\": \"^1.8.10\",\n    \"typescript\": \"^5.5.3\",\n    \"typescript-eslint\": \"^8.3.0\",\n    \"vite\": \"^5.0.0\"\n  },\n  \"pnpm\": {\n    \"peerDependencyRules\": {\n      \"ignoreMissing\": [\n        \"react\",\n        \"react-dom\"\n      ]\n    },\n    \"onlyBuiltDependencies\": [\n      \"electron\",\n      \"electron-winstaller\",\n      \"esbuild\"\n    ]\n  },\n  \"resolutions\": {\n    \"@types/estree\": \"^1.0.0\",\n    \"@types/estree-jsx\": \"^1.0.0\",\n    \"@mdx-js/mdx\": \"^2.0.0\"\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
